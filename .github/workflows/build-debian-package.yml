name: Build Debian Package

on:
  push:
    branches: [branchAutoPackage, master]
  pull_request:
    branches: [branchAutoPackage, master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  

    - name: Install build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential devscripts debhelper fakeroot lintian autoconf automake rsync

    - name: Create configure.ac if not exists
      run: |
        if [ ! -f ./configure.ac ]; then
          echo "AC_INIT([myprogram], [1.0], [cheryxso@gmail.com])" > configure.ac
          echo "AM_INIT_AUTOMAKE([foreign])" >> configure.ac
          echo "AC_PROG_CXX" >> configure.ac
          echo "AC_PROG_CC" >> configure.ac
          echo "AC_CONFIG_FILES([Makefile])" >> configure.ac
          echo "AC_OUTPUT" >> configure.ac
        fi

    - name: Create Makefile.am if not exists
      run: |
        if [ ! -f ./Makefile.am ]; then
          echo "AUTOMAKE_OPTIONS = foreign" > Makefile.am
          echo "bin_PROGRAMS = my_program" >> Makefile.am
          echo "my_program_SOURCES = main.cpp FuncA.cpp FuncA.h" >> Makefile.am
        fi

    - name: Generate configure script
      run: autoreconf -i

    - name: Configure the project
      run: ./configure

    - name: Build the project
      run: make

    - name: List files after build
      run: |
        echo "Listing files in the current directory"
        ls -la  # Check if .deb file exists

    - name: Create tarball of the project
      run: |
        mkdir -p ../myprogram-1.0
        rsync -av --exclude=myprogram-1.0 ./ ../myprogram-1.0/
        cd ../
        tar czf myprogram_1.0.orig.tar.gz myprogram-1.0/

    - name: Create debian files
      run: |
        cd ../myprogram-1.0
        mkdir -p debian
        echo "Source: myprogram" > debian/control
        echo "Maintainer: Ksenia <cheryxso@gmail.com>" >> debian/control
        echo "Section: misc" >> debian/control
        echo "Priority: optional" >> debian/control
        echo "Standards-Version: 3.9.6" >> debian/control
        echo "Build-Depends: debhelper (>= 9), g++" >> debian/control
        
        echo "Package: myprogram" >> debian/control
        echo "Architecture: any" >> debian/control
        echo "Depends: \${shlibs:Depends}, \${misc:Depends}" >> debian/control
        echo "Description: My program for creating Debian packages" >> debian/control
        
        echo "myprogram (1.0-1) unstable; urgency=low" > debian/changelog
        echo "  * Initial release." >> debian/changelog
        echo "" >> debian/changelog
        echo " -- Ksenia <cheryxso@gmail.com>  $(date -R)" >> debian/changelog
        
        echo "9" > debian/compat
        echo "#!/usr/bin/make -f" > debian/rules
        echo "%:" >> debian/rules
        echo -e "\tdh \$@" >> debian/rules
        
        chmod +x debian/rules

    - name: Build the Debian package
      run: |
        cd ../myprogram-1.0
        debuild -us -uc --no-sign
        
    - name: List files after Debian build 
      run: |
        cd ../myprogram-1.0 
        ls -la  # Check if .deb file was created

    - name: Move .deb file to artifact folder
      run: |
        mkdir -p ./path/to/artifact/
        
        if ls ../myprogram-1.0/*.deb 1> /dev/null 2>&1; then 
          mv ../myprogram-1.0/*.deb ./path/to/artifact/
          echo ".deb file moved successfully."
        else 
          echo "No .deb file found."
          exit 1 
        fi 

    - name: Upload Debian package as an artifact 
      uses: actions/upload-artifact@v4 
      with:
        name: myprogram-debian-package 
        path: ./path/to/artifact/*.deb
